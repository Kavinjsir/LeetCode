/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public static Comparator<ListNode> valComparator = new Comparator<ListNode>() {
        @Override
        public int compare(ListNode p1, ListNode p2) {
            return p1.val - p2.val;
        }
    };
    
    public ListNode mergeKLists(ListNode[] lists) {
        Queue<ListNode> pairQ = new PriorityQueue<>(1, valComparator);
        ListNode p = new ListNode(0);
        ListNode cur = p;
        for(ListNode i : lists){
            if(i != null) {
                pairQ.add(i);
            }
        }
        while(!pairQ.isEmpty()){
            cur.next = pairQ.poll();
            cur = cur.next;
            if(cur.next != null) {
                pairQ.add(cur.next);
            }
        }
        return p.next;
    }
}
